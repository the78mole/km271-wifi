name: KM217-WiFi Build & Documentation Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'KM217-WiFi/**'
      - 'EXTENSIONS/ETH_W5500/**'
      - 'DOC/**'
      - '.github/workflows/pr-check.yml'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  load-config:
    name: � Load Project Configuration
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🔧 Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          
      - name: 📋 Load KiCad Projects Matrix
        id: set-matrix
        run: |
          MATRIX=$(.github/workflows/scripts/load-kicad-projects.sh --filter enabled)
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "Loaded matrix: $MATRIX"

  hardware-build:
    name: 🔧 Hardware Build & Export
    runs-on: ubuntu-latest
    needs: load-config
    container:
      image: ghcr.io/the78mole/kicaddev-docker:latest
    
    strategy:
      matrix: ${{ fromJson(needs.load-config.outputs.matrix) }}
      fail-fast: false
      
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🏷️ Generate Semantic Version
      id: semver
      uses: paulhatch/semantic-version@v5.4.0
      with:
        branch: main
        tag_prefix: "v"
        version_format: "${major}.${minor}.${patch}"
        major_pattern: "/^(feat|fix|refactor)!:/"
        minor_pattern: "/^feat:/"
        bump_each_commit: false
        search_commit_body: true
        
    - name: 🔍 Check for KiCad Changes Since Last Release
      id: check-changes
      run: |
        ./.github/workflows/scripts/check-kicad-changes-since-release.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
      
    - name: 🔄 Update KiCad Revision
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/update-kicad-revision.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}" \
          --version "${{ steps.semver.outputs.version }}" \
          --pr "${{ github.event.pull_request.number || '0' }}"
      
    - name: 🔍 Check KiCad Project Files
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/check-kicad-files-with-revision.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 🧹 Clean Export Directory
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/clean-export-dirs.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 📐 Export Schematics PDF
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/export-schematics.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 🔧 Export Gerber Files
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/export-gerber.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 📄 Export PCB PDF
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/export-pcb-pdf.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 🖼️ Export PCB Images
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/export-pcb-images.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 🎯 Export 3D Models
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/export-3d-models.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 📊 Generate Production Summary
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/generate-production-summary-pr.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}" \
          --sha "${GITHUB_SHA}"
        
    - name: 🧪 Validate Export Files
      if: steps.check-changes.outputs.CHANGED == 'true'
      run: |
        ./.github/workflows/scripts/validate-export-files.sh \
          --name "${{ matrix.project.name }}" \
          --path "${{ matrix.project.path }}" \
          --description "${{ matrix.project.description }}"
        
    - name: 📤 Upload Hardware Artifacts
      if: steps.check-changes.outputs.CHANGED == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project.name }}-hardware-exports
        path: |
          ${{ matrix.project.path }}/Export/
        retention-days: 30
        
    - name: 📤 Upload Revision Status
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project.name }}-revision-status
        path: |
          revision-status/${{ matrix.project.name }}-revision.txt
        retention-days: 30
        if-no-files-found: ignore
        
    - name: 📤 Upload Change Status
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project.name }}-change-status
        path: |
          change-status/${{ matrix.project.name }}-changes.txt
        retention-days: 30
        if-no-files-found: ignore
        
  documentation-build:
    name: 📚 Documentation Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/the78mole/kicaddev-docker:latest
      
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔍 Check Documentation Files
      run: ./.github/workflows/scripts/check-documentation.sh
        
    - name: 📖 Build AsciiDoc Documentation
      run: ./.github/workflows/scripts/build-asciidoc.sh
        
    - name: 📝 Generate LaTeX Documentation
      run: ./.github/workflows/scripts/build-latex.sh
        
    - name: 🔗 Check Documentation Links
      run: ./.github/workflows/scripts/check-documentation-links.sh
        
    - name: 📊 Documentation Statistics
      run: ./.github/workflows/scripts/generate-documentation-statistics.sh
        
    - name: 📤 Upload Documentation Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: km217-wifi-documentation
        path: |
          DOC/
        retention-days: 30
        
  pr-summary:
    name: 📋 PR Summary
    runs-on: ubuntu-latest
    needs: [hardware-build, documentation-build]
    if: always()  # Always run, even if some jobs fail
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 📥 Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
        
    - name: 📊 Generate PR Summary
      run: ./.github/workflows/scripts/generate-pr-summary.sh
        
    - name: 💬 Comment PR Summary
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && !env.ACT
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('pr_summary.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });
          
    - name: 🧪 Local Test Summary (act only)
      if: env.ACT == 'true'
      run: ./.github/workflows/scripts/local-pr-test-summary.sh
